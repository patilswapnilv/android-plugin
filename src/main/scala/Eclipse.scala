import sbt._

trait Eclipse extends AndroidProject {
  
	val eclipseProject = """
    <?xml version="1.0" encoding="UTF-8"?>
    <projectDescription>
    	<name>%s</name>
    	<comment>generated by SBT</comment>
    	<projects>
    	</projects>
    	<buildSpec>
    		<buildCommand>
    			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
    			<arguments>
    			</arguments>
    		</buildCommand>
    		<buildCommand>
    			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
    			<arguments>
    			</arguments>
    		</buildCommand>
    		<buildCommand>
    			<name>org.eclipse.jdt.core.javabuilder</name>
    			<arguments>
    			</arguments>
    		</buildCommand>
    		<buildCommand>
    			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
    			<arguments>
    			</arguments>
    		</buildCommand>
    	</buildSpec>
    	<natures>
    		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
    		<nature>org.eclipse.jdt.core.javanature</nature>
    	</natures>
      <!-- Linked resources --> %s
    </projectDescription>
  """
  
  def generateClasspath = {
    
  }
  
  val eclipseClasspath = """
  <?xml version="1.0" encoding="UTF-8"?>
  <classpath>
  	<classpathentry kind="src" path="%s"/>
  	<classpathentry kind="src" path="%s"/>
    <classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
  
    <!-- linked resources -->
    <classpathentry kind="src" path="%s"/>
  
  	<classpathentry kind="output" path="%s"/>
  </classpath>
  """
  
  val classpathEntry = """<classpathentry kind="lib" path="%s"/>\n"""
  
  val linkedResources = """	
  <linkedResources>
		<link>
			<name>%s_src</name>
			<type>2</type>
			<locationURI>%s</locationURI>
		</link>
	</linkedResources>
  """ 
  
  lazy val print = task {
      
    None
  }
    
}